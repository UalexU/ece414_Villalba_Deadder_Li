#include "pico/stdlib.h"

// define ultrasonic sensor pins
#define TRIG_PIN 15  // trigger pin connected to GPIO 15
#define ECHO_PIN 14  // echo pin connected to GPIO 14
#define LED_PIN 25   // onboard LED pin

// function to initialize the ultrasonic sensor
void setup_ultrasonic_sensor() {
    gpio_init(TRIG_PIN);  /
    gpio_init(ECHO_PIN);  
    gpio_init(LED_PIN);   
    gpio_set_dir(TRIG_PIN, GPIO_OUT); 
    gpio_set_dir(ECHO_PIN, GPIO_IN);  
    gpio_set_dir(LED_PIN, GPIO_OUT); 
}

// function to measure distance using the ultrasonic sensor
float measure_distance() {
    // Send a 10us pulse to trigger the ultrasonic sensor
    gpio_put(TRIG_PIN, 1);
    sleep_us(10);
    gpio_put(TRIG_PIN, 0);
    
    // Wait for the echo to go high
    while (gpio_get(ECHO_PIN) == 0) {}  // Wait for the start of the pulse
    uint32_t start_time = time_us_32();

    // Wait for the echo to go low (end of pulse)
    while (gpio_get(ECHO_PIN) == 1) {}  // Wait for the end of the pulse
    uint32_t travel_time = time_us_32() - start_time;

    // Debug: Print the travel time to check the sensor response
    printf("Travel Time: %lu us\n", travel_time);

    // Calculate distance in cm (speed of sound = 34300 cm/s)
    float distance = (travel_time / 2.0) / 29.1; // Divide by 29.1 to convert to cm

    return distance;
}

void setup() {
    Serial.begin(115200);  // Initialize serial communication at 115200 baud rate
    setup_ultrasonic_sensor();  // Setup the sensor and LED
}

void loop() {
    // Measure the distance using the ultrasonic sensor
    float distance = measure_distance();

    // Print the measured distance
    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println(" cm");

    // If the distance is less than 20 cm, turn on the LED
    if (distance < 20.0) {
        gpio_put(LED_PIN, 1);  // Turn on the LED
    } else {
        gpio_put(LED_PIN, 0);  // Turn off the LED
    }

    delay(500);  // Wait for 500ms before measuring again
}
